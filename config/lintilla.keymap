#include <behaviors.dtsi>
// See https://github.com/urob/zmk-auto-layer
#include <behaviors/num_word.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <behaviors/rgbled_widget.dtsi>

#define DEFAULT 0
#define SHIFTED 1
#define SYMBOL 2
#define NAVIGATION 3
#define EDITING 4
#define CONFIG 5
#define GAMING 6
#define AUTO_SHIFT 7

#define COMBO_TIMEOUT_MS 100
/* Copied (modified) from https://github.com/caksoylar/zmk-config */
#define NAMED_COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <COMBO_TIMEOUT_MS>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <DEFAULT SYMBOL NAVIGATION CONFIG>; \
    slow-release; \
    require-prior-idle-ms = <125>; \
  };
// See https://stackoverflow.com/a/71899854 on why these multiple functions are necessary
// Can test output by putting these macros in a file test.c, then running 
// `gcc -E test.c`
#define NAMED_COMBO2(NAME, BINDINGS, KEYPOS) NAMED_COMBO(NAME, BINDINGS, KEYPOS)
// __LINE__ is the line number in the file, used here for uniqueness.
#define COMBO(BINDINGS, KEYPOS) NAMED_COMBO2(__LINE__, BINDINGS, KEYPOS)

#define SHIFT_COMBO_TIMEOUT_MS 75
/* Copied (modified) from https://github.com/caksoylar/zmk-config */
#define SHIFT_NAMED_COMBO(NAME, BINDINGS, KEYPOS) \
  combo_shift_##NAME { \
    timeout-ms = <SHIFT_COMBO_TIMEOUT_MS>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <DEFAULT>; \
    require-prior-idle-ms = <50>; \
  };
// See https://stackoverflow.com/a/71899854 on why these multiple functions are necessary
// Can test output by putting these macros in a file test.c, then running 
// `gcc -E test.c`
#define SHIFT_NAMED_COMBO2(NAME, BINDINGS, KEYPOS) SHIFT_NAMED_COMBO(NAME, BINDINGS, KEYPOS)
// __LINE__ is the line number in the file, used here for uniqueness.
#define SHIFT_COMBO(BINDINGS, KEYPOS) SHIFT_NAMED_COMBO2(__LINE__, BINDINGS, KEYPOS)

#define SYMBOL_COMBO_TIMEOUT_MS 75
/* Copied (modified) from https://github.com/caksoylar/zmk-config */
#define SYMBOL_NAMED_COMBO(NAME, BINDINGS, KEYPOS) \
  combo_symbol_##NAME { \
    timeout-ms = <SYMBOL_COMBO_TIMEOUT_MS>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <SHIFTED>; \
  };
// See https://stackoverflow.com/a/71899854 on why these multiple functions are necessary
// Can test output by putting these macros in a file test.c, then running 
// `gcc -E test.c`
#define SYMBOL_NAMED_COMBO2(NAME, BINDINGS, KEYPOS) SYMBOL_NAMED_COMBO(NAME, BINDINGS, KEYPOS)
// __LINE__ is the line number in the file, used here for uniqueness.
#define SYMBOL_COMBO(BINDINGS, KEYPOS) SYMBOL_NAMED_COMBO2(__LINE__, BINDINGS, KEYPOS)

// Magic bluetooth button
#define BT_(btnum) &bt_key btnum btnum

#define AS(keycode) &as LS(keycode) keycode

/ {
behaviors {
    as: auto_shift {
        compatible = "zmk,behavior-hold-tap";
        label = "AUTO_SHIFT";
        #binding-cells = <2>;
        tapping_term_ms = <300>;
        quick_tap_ms = <0>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

    bt_key: magic_bluetooth_key {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <500>;
        bindings = <&bt_clr>, <&bt_sel>;
    };

    lht_bal: balanced_hold_tap_for_layers {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <200>;
        retro-tap;
        bindings = <&mo>, <&kp>;
    };

    lt_sl: layer_tap_sticky_layer {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <200>;
        retro-tap;
        bindings = <&mo>, <&sl>;
    };

    mcs: mod_comma_semi {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp COMMA>, <&kp SEMI>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    mcs_edit: mod_comma_semi_edit {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&lht_bal EDITING COMMA>, <&kp SEMI>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    mdc: mod_dot_colon {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp DOT>, <&kp COLON>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    mdc_edit: mod_dot_colon_edit {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&lht_bal EDITING DOT>, <&kp COLON>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    msb: mod_slash_back {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp SLASH>, <&kp BACKSLASH>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    msb_nav: mod_slash_back_nav {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&lht_bal NAVIGATION SLASH>, <&kp BACKSLASH>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    
    num_word: num_word {
        compatible = "zmk,behavior-auto-layer";
        #binding-cells = <1>;
        continue-list = <N0 N1 N2 N3 N4 N5 N6 N7 N8 N9 BSPC DEL DOT COMMA PLUS MINUS STAR SLASH EQUAL>;
        ignore-modifiers;
    };

    nav_word: nav_word {
      compatible = "zmk,behavior-auto-layer";
      #binding-cells = <1>;
      continue-list = <LEFT DOWN UP RIGHT PG_DN PG_UP HOME END>;
      ignore-modifiers;
    };
};

macros {
    // Attempting to do
    // https://www.reddit.com/r/olkb/comments/1f6x99q/tap_into_a_layer_from_another_layer_and_exit_by/
    ltto_symb: to_symbol_layer_while_another_layer_held {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings =
            <&macro_press &to SYMBOL>,
            <&macro_release &to DEFAULT>;
    };

    bt_clr: bluetooth_clear {
        compatible = "zmk,behavior-macro-one-param";
        #binding-cells = <1>;
        bindings = <&macro_param_1to1 &bt_sel MACRO_PLACEHOLDER>, <&bt BT_CLR>;
    };

    bt_sel: bluetooth_select {
        compatible = "zmk,behavior-macro-one-param";
        #binding-cells = <1>;
        bindings = <&out OUT_BLE>, <&macro_param_1to2 &bt BT_SEL MACRO_PLACEHOLDER>;
    };

    flash: dongle_bootloader {
        compatible = "zmk,behavior-macro-one-param";
        #binding-cells = <1>;
        bindings = <&macro_param_1to1 &to MACRO_PLACEHOLDER>, <&bootloader>;
    };

    // Windows sleep key
    win_sleep: win_sleep {
        wait-ms = <500>;
        tap-ms = <5>;
        compatible = "zmk,behavior-macro";
        label = "WIN_SLEEP_KEY";
        #binding-cells = <0>;
        bindings = <&kp LG(X) &kp U &kp S>;
    };

};

combos {
    compatible = "zmk,combos";
    //                                             KEY POSITIONS
    //       ┏━━━━━━━┓                                                                   ┏━━━━━━━┓
    //           0                                                                          1
    // ┏━━━━━╋━━━━━━━╋━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓   ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━╋━━━━━━━╋━━━━━━━┓
    //    2      3       4       5       6       7           8       9      10      11      12      13
    // ┣━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫   ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
    //   14      15      16      17      18      19          20     21      22      23      24      25
    // ┗━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫   ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┛
    //          26      27      28      29      30          31      32      33      34      35
    //       ┗━━┳━━━━┻━━━━━━━┻┳━━━━━━┻━━━━━━┳┻━━━━━━━┻┓ ┏┻━━━━━━━┻━━━┳━━━┻━━━━━━━┻━┳━━━━━┻━━━━━━━┛
    //               36          37             38            39          40             41
    //          ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━┛ ┗━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
    
    // Note that these macros can be very fragile - for instance, putting
    // comments after them on the same line can break them!

    COMBO(&kp DEL, 8 9)
    COMBO(&kp BSPC, 20 21)
    COMBO(&kp TAB, 31 32)

    COMBO(&kp DEL, 6 7)
    COMBO(&kp BSPC, 18 19)

    // Various convienience keys that are nice to have on the left hand when using the mouse with the right
    // Should be awkward enough to press that they never accidentally get hit

    COMBO(&kp BSPC, 2 37)
    COMBO(&mo SYMBOL, 2 14)
    COMBO(&mo SYMBOL, 14 37)
    COMBO(&mo SYMBOL, 7 37)
    COMBO(&kp RET, 19 37)
    COMBO(&kp RET, 36 37)

    // This should make alt-tabbing easy when pressed with the ring finger.

    COMBO(&kp LALT, 3 37)

    // Experimental symbol combos

    SHIFT_COMBO(&kp TILDE, 21 22 3)
    SHIFT_COMBO(&kp N3, 21 22 4)
    SHIFT_COMBO(&kp N2, 21 22 5)
    SHIFT_COMBO(&kp N1, 21 22 6)
    SHIFT_COMBO(&kp PLUS, 21 22 7)

    SHIFT_COMBO(&kp N0, 21 22 15)
    SHIFT_COMBO(&kp N6, 21 22 16)
    SHIFT_COMBO(&kp N5, 21 22 17)
    SHIFT_COMBO(&kp N4, 21 22 18)
    SHIFT_COMBO(&kp PRCNT, 21 22 19)

    SHIFT_COMBO(&kp CARET, 21 22 26)
    SHIFT_COMBO(&kp N9, 21 22 27)
    SHIFT_COMBO(&kp N8, 21 22 28)
    SHIFT_COMBO(&kp N7, 21 22 29)
    SHIFT_COMBO(&kp DLLR, 21 22 30)

    SHIFT_COMBO(&kp EXCL, 17 18 8)
    SHIFT_COMBO(&kp EQUAL, 17 18 9)
    SHIFT_COMBO(&kp AMPS, 17 18 10)
    SHIFT_COMBO(&kp PIPE, 17 18 11)
    SHIFT_COMBO(&kp AT, 17 18 12)
    SHIFT_COMBO(&kp GRAVE, 17 18 13)

    SHIFT_COMBO(&kp STAR, 17 18 20)
    SHIFT_COMBO(&kp LPAR, 17 18 21)
    SHIFT_COMBO(&kp LBKT, 17 18 22)
    SHIFT_COMBO(&kp LBRC, 17 18 23)
    SHIFT_COMBO(&kp LT, 17 18 24)
    SHIFT_COMBO(&kp QMARK, 17 18 25)

    SHIFT_COMBO(&kp HASH, 17 18 31)
    SHIFT_COMBO(&kp RPAR, 17 18 32)
    SHIFT_COMBO(&kp RBKT, 17 18 33)
    SHIFT_COMBO(&kp RBRC, 17 18 34)
    SHIFT_COMBO(&kp GT, 17 18 35)

    // More experimental symbol combos

    SYMBOL_COMBO(&kp EXCL, 8 9)
    SYMBOL_COMBO(&kp EQUAL, 9 10)
    SYMBOL_COMBO(&kp AMPS, 10 11)
    SYMBOL_COMBO(&kp PIPE, 11 12)
    SYMBOL_COMBO(&kp GRAVE, 12 13)

    SYMBOL_COMBO(&kp STAR, 20 21)
    SYMBOL_COMBO(&kp LPAR, 21 22)
    SYMBOL_COMBO(&kp LBKT, 22 23)
    SYMBOL_COMBO(&kp LBRC, 23 24)
    SYMBOL_COMBO(&kp LT, 24 25)
    SYMBOL_COMBO(&kp QMARK, 25 35)

    SYMBOL_COMBO(&kp HASH, 31 32)
    SYMBOL_COMBO(&kp RPAR, 32 33)
    SYMBOL_COMBO(&kp RBKT, 33 34)
    SYMBOL_COMBO(&kp RBRC, 34 35)
    SYMBOL_COMBO(&kp GT, 24 35)

};

keymap {
    compatible = "zmk,keymap";

    colemak_dh {
        //                           ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
        display-name = "Colemak DH"                ;
        //                           ┗━━━━━━━━━━━━━━━━━━━━━━━━━┛
        bindings = <
//         ┏━━━━━━━┓                                                                           ┏━━━━━━━┓
//          &num_word SYMBOL                                                                    &to CONFIG
           &to SYMBOL                                                                          &to CONFIG
// ┏━━━━━━━╋━━━━━━━╋━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓           ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━╋━━━━━━━╋━━━━━━━┓
    &kp TAB  &kp Q   &kp W   &kp F   &kp P   &kp B               &kp J   &kp L   &kp U   &kp Y  &kp UNDER &kp SQT
// ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫           ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
    &kp ESC  &kp A   &kp R   &kp S   &kp T   &kp G               &kp M   &kp N   &kp E   &kp I   &kp O   &kp COLON
// ┗━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫           ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┛
             &kp Z   &kp X   &kp C   &kp D   &kp V               &kp K   &kp H &mcs_edit &mdc_edit &msb_nav
//         ┗━━┳━━━━┻━━━━━━━┻┳━━━━━━┻━━━━━━┳┻━━━━━━━┻━━━━┓  ┏━━━┻━━━━━━━┻━━━┳━━━┻━━━━━━━┻━┳━━━━━┻━━━━━━━┛
                 &kp LGUI     &kp LCTRL      &kp SPACE       &kp MINUS     &lt_sl SHIFTED SYMBOL  &lt SYMBOL RET
//            ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛  ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
        >;
        // TODO try &ltto on the shifted key if i can find some keys to change layers further on the shifted layer
    };

    colemak_dh_shifted {
        //                           ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
        display-name = "Colemak DH Shifted"                ;
        //                           ┗━━━━━━━━━━━━━━━━━━━━━━━━━┛
        bindings = <
//                ┏━━━━━━━┓                                                                                                                           ┏━━━━━━━┓
               &num_word SYMBOL                                                                                                                   &nav_word NAVIGATION
// ┏━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━┓  ┏━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━╋━━━━━━━━━━━━╋━━━━━━━━━━━━━━┓
    &kp LS(TAB) &as MINUS LS(Q) &as N3 LS(W) &as N2 LS(F) &as N1 LS(P) &as PLUS LS(B)    &as LT LS(J) &as LBRC LS(L) &as RBRC LS(U) &as PIPE LS(Y) &as AT TILDE  &as GRAVE LS(SQT)
// ┣━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━╋━━━━━━━━━━━━╋━━━━━━━━━━━━╋━━━━━━━━━━━━━━┫  ┣━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━╋━━━━━━━━━━━━╋━━━━━━━━━━━━━━┫
    &kp ESC     &as N0 LS(A)    &as N6 LS(R) &as N5 LS(S) &as N4 LS(T) &as EQUAL LS(G)   &as GT LS(M) &as LPAR LS(N)  &as RPAR LS(E) &as STAR LS(I) &as PRCNT LS(O) &as EXCL QMARK
// ┗━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━╋━━━━━━━━━━━━╋━━━━━━━━━━━━╋━━━━━━━━━━━━━━┫  ┣━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━╋━━━━━━━━━━━━╋━━━━━━━━━━━━━━┛
                &as SLASH LS(Z) &as N9 LS(X) &as N8 LS(C) &as N7 LS(D) &as DOT LS(V)    &as AMPS LS(K) &as LBKT LS(H)  &as RBKT SEMI  &as HASH COLON &as DLLR BACKSLASH
//             ┗━━┳━━━━━━━━━━━━┻━━━━━━━━━━━━┻┳━━━━━━━━━━━┻━━━━━━━━━━━┳┻━━━━━━━━━━━━━━┻┓┏┻━━━━━━━━━━━━━━┻━━━━━━━━━━━┳━━━┻━━━━━━━━━━━━━━┻━┳━━━━━━━━━━━━┻━━━━━━━━━━━━┛
                      &kp LGUI                  &kp LCTRL               &kp SPACE          &kp DEL                         &none                 &kp LS(RET)
//                ┗━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━┛┗━━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━━━━━━┛
        >;
    };

    symbols {
        //                       ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
        display-name = "symbols"                ;
        //                       ┗━━━━━━━━━━━━━━━━━━━━━━━━━┛
        bindings = <
//         ┏━━━━━━━━━┓                                                                            ┏━━━━━━━━┓
            &to DEFAULT                                                                           &to DEFAULT
// ┏━━━━━━━╋━━━━━━━━━╋━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━┓   ┏━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━┳━━━━━━━━╋━━━━━━━━━╋━━━━━━━┓
    &kp TAB &kp MINUS &kp N3  &kp N2  &kp N1  &kp PLUS      &kp LT    &kp LBRC  &kp RBRC &kp PIPE  &kp AT   &kp GRAVE
// ┣━━━━━━━╋━━━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━━━┫   ┣━━━━━━━━━╋━━━━━━━━━╋━━━━━━━━╋━━━━━━━━╋━━━━━━━━━╋━━━━━━━┫
    &kp ESC &kp N0    &kp N6  &kp N5  &kp N4  &kp EQUAL     &kp GT    &kp LPAR  &kp RPAR &kp STAR  &kp PRCNT &kp EXCL
// ┗━━━━━━━╋━━━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━━━┫   ┣━━━━━━━━━╋━━━━━━━━━╋━━━━━━━━╋━━━━━━━━╋━━━━━━━━━╋━━━━━━━┛
            &kp SLASH &kp N9  &kp N8  &kp N7  &kp DOT       &kp AMPS  &kp LBKT  &lht_bal EDITING RBKT &lht_bal EDITING HASH  &lht_bal NAVIGATION DLLR 
//         ┗━━┳━━━━━━┻━━━━━━━┻┳━━━━━━┻━━━━━━┳┻━━━━━━━━━┻┓ ┏┻━━━━━━━━━┻━━━┳━━━━━┻━━━━━━━━┻━┳━━━━━━┻━━━━━━━━━┛
                 &kp RET        &kp LCTRL     &kp SPACE      &kp CARET      &kp LSHFT        &none
//            ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━┛ ┗━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┛
        >;
    };

    nav {
        //                       ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
        display-name = "navigation"            ;
        //                       ┗━━━━━━━━━━━━━━━━━━━━━━━━━┛
        bindings = <
//         ┏━━━━━━━┓                                                                               ┏━━━━━━━┓
           &to DEFAULT                                                                              &to DEFAULT
// ┏━━━━━━━╋━━━━━━━╋━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓           ┏━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┳━━━━━━━╋━━━━━━━╋━━━━━━━┓
  &kp PSCRN &kp F1  &kp F2   &kp F3  &kp F4 &kp C_VOL_UP        &kp PGUP  &kp LC(LEFT) &kp BSPC &kp LC(RIGHT) &kp DEL &kp TILDE 
// ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫           ┣━━━━━━━━━━╋━━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
   &kp C_PP &kp F5  &kp F6  &kp F7  &kp F8  &kp C_VOL_DN        &kp BSPC  &kp PGUP &kp UP  &kp PGDN &kp END   &kp CARET
// ┗━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫           ┣━━━━━━━━━━╋━━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┛
            &kp F9  &kp F10 &kp F11 &kp F12 &kp C_MUTE          &kp HOME &kp LEFT &kp DOWN &kp RIGHT  &msb
//         ┗━━┳━━━━┻━━━━━━━┻┳━━━━━━┻━━━━━━┳┻━━━━━━━┻━━━━┓  ┏━━━┻━━━━━━━━━━┻┳━━━━━━━┻━━━━━━━┻━┳━━━━━┻━━━━━━━┛
                  &kp LALT    &kp LCTRL      &kp SPACE       &kp DEL         &kp RSHFT     &kp END 
//            ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛  ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
        >;
    };

    editing {
        //                       ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
        display-name = "editing"            ;
        //                       ┗━━━━━━━━━━━━━━━━━━━━━━━━━┛
        bindings = <
//         ┏━━━━━━━┓                                                                               ┏━━━━━━━┓
           &to DEFAULT                                                                              &to DEFAULT
// ┏━━━━━━━╋━━━━━━━╋━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓           ┏━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┳━━━━━━━╋━━━━━━━╋━━━━━━━┓
  &kp PSCRN &kp F1  &kp F2   &kp F3  &kp F4 &kp C_VOL_UP        &kp PGUP  &kp LC(LEFT) &kp BSPC &kp LC(RIGHT) &kp DEL &kp TILDE 
// ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫           ┣━━━━━━━━━━╋━━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
   &kp C_PP &kp F5  &kp F6  &kp F7  &kp F8  &kp C_VOL_DN        &kp LC(BSPC) &kp UP &kp DEL &kp RIGHT &kp END   &kp CARET
// ┗━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫           ┣━━━━━━━━━━╋━━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┛
            &kp F9  &kp F10 &kp F11 &kp F12 &kp C_MUTE          &kp LC(BSPC) &kp BSPC &kp DEL &kp DEL  &kp LC(DEL)
//         ┗━━┳━━━━┻━━━━━━━┻┳━━━━━━┻━━━━━━┳┻━━━━━━━┻━━━━┓  ┏━━━┻━━━━━━━━━━┻┳━━━━━━━┻━━━━━━━┻━┳━━━━━┻━━━━━━━┛
                  &kp LALT    &kp LCTRL      &kp SPACE       &kp PGUP       &kp PGDN       &kp DOWN
//            ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛  ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
        >;
    };

    config {
        //                       ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
        display-name = "config"            ;
        //                       ┗━━━━━━━━━━━━━━━━━━━━━━━━━┛
        bindings = <
//         ┏━━━━━━━┓                                                                           ┏━━━━━━━┓
          &to DEFAULT                                                                         &to DEFAULT
// ┏━━━━━━━╋━━━━━━━╋━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓           ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━╋━━━━━━━╋━━━━━━━┓
//                                                              con led         bat led
&kp C_BRI_UP &none  &none    &none   &none  &none              &ind_con  &none &ind_bat  &none &win_sleep &kp C_SLEEP
// ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫           ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
&kp C_BRI_DN BT_(0)  BT_(1)  BT_(2)  BT_(3)  BT_(4)              &none   &none   &none   &none   &none   &none
// ┗━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫           ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┛
          &bootloader &none &kp CAPS &none  &none               &none   &none   &none   &none &bootloader
//         ┗━━┳━━━━┻━━━━━━━┻┳━━━━━━┻━━━━━━┳┻━━━━━━━┻━━━━┓  ┏━━━┻━━━━━━━┻━━━┳━━━┻━━━━━━━┻━┳━━━━━┻━━━━━━━┛
                    &kp LGUI      &kp LCTL     &kp SPACE     &mt LSHFT MINUS    &lt 1 RET    &lt 2 RET 
//            ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛  ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
        >;
    };

    // Not actively used layers.

    gaming {
        //                           ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
        display-name = "Gaming"                ;
        //                           ┗━━━━━━━━━━━━━━━━━━━━━━━━━┛
        bindings = <
//         ┏━━━━━━━┓                                                                           ┏━━━━━━━┓
           &to DEFAULT                                                                         &to DEFAULT
// ┏━━━━━━━╋━━━━━━━╋━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓           ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━╋━━━━━━━╋━━━━━━━┓
    &kp TAB  &kp LALT &kp N0 &kp UP &kp N1  &kp N2               &kp J   &kp L   &kp U   &kp Y  &kp UNDER &kp SQT
// ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫           ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
    &kp ESC  &kp LSHFT &kp LEFT  &kp DOWN  &kp RIGHT   &kp N3               &kp M   &kp N   &kp E   &kp I  &kp O   &kp MINUS
// ┗━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫           ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┛
        &kp LCTRL   &kp N7   &kp N6   &kp N5   &kp N4              &kp K   &kp H   &mcs    &mdc   &msb_nav
//         ┗━━┳━━━━┻━━━━━━━┻┳━━━━━━┻━━━━━━┳┻━━━━━━━┻━━━━┓  ┏━━━┻━━━━━━━┻━━━┳━━━┻━━━━━━━┻━┳━━━━━┻━━━━━━━┛
                 &kp LGUI     &kp RET      &kp SPACE          &kp BSPC       &mt LSHFT ESC    &lt NAVIGATION DEL
//            ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛  ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
        >;
    };

    colemak_dh_autoshift {
        //                           ┏━━━━━━━━━━━━━━━━━━━━━━━━━┓
        display-name = "Colemak DH Autoshift"                ;
        //                           ┗━━━━━━━━━━━━━━━━━━━━━━━━━┛
        bindings = <
//         ┏━━━━━━━┓                                                                           ┏━━━━━━━┓
         &num_word SYMBOL                                                               &nav_word NAVIGATION
// ┏━━━━━━━╋━━━━━━━╋━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓           ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━╋━━━━━━━╋━━━━━━━┓
    &kp TAB  AS(Q)   AS(W)   AS(F)   AS(P)   AS(B)               AS(J)   AS(L)   AS(U)   AS(Y)  &caps_word AS(SQT)
// ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫           ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
    &kp ESC  AS(A)   AS(R)   AS(S)   AS(T)   AS(G)               AS(M)   AS(N)   AS(E)   AS(I)  AS(O)   AS(MINUS)
// ┗━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫           ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┛
             AS(Z)   AS(X)   AS(C)   AS(D)   AS(V)               AS(K)   AS(H)   &as SEMI COMMA    &as COLON DOT   &as BACKSLASH SLASH
//         ┗━━┳━━━━┻━━━━━━━┻┳━━━━━━┻━━━━━━┳┻━━━━━━━┻━━━━┓  ┏━━━┻━━━━━━━┻━━━┳━━━┻━━━━━━━┻━┳━━━━━┻━━━━━━━┛
               &kp LGUI    &mt LCTRL RET   &kp SPACE       &kp BSPC     &lt SYMBOL ESC  &lt NAVIGATION DEL
//            ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛  ┗━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┛
        >;
    };
};
};

// vim: expandtab softtabstop=4 shiftwidth=4 filetype=dts
