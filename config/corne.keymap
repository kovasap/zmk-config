/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define DEFAULT 0
#define SYMBOL 1
#define NAVI 2
#define CONFIG 3

/ {

   macros {
        // Windows sleep key
        win_sleep: win_sleep {
            wait-ms = <500>;
            tap-ms = <5>;
            compatible = "zmk,behavior-macro";
            label = "WIN_SLEEP_KEY";
            #binding-cells = <0>;
            bindings = <&kp LG(X) &kp U &kp S>;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_symbol {
            timeout-ms = <50>;
            // index upper row key and key to the left on right hand
            key-positions = <6 7>;
            bindings = <&tog SYMBOL>;
        };
        combo_navi {
            timeout-ms = <50>;
            // index lower row key and key to the left on right hand
            key-positions = <30 31>;
            bindings = <&tog NAVI>;
        };
        combo_mo_config {
            timeout-ms = <50>;
            // both mod keys
            key-positions = <40 41>;
            bindings = <&mo CONFIG>;
        };
        combo_up {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp UP>;
        };
        combo_down {
            timeout-ms = <50>;
            key-positions = <19 21>;
            bindings = <&kp DOWN>;
        };
        combo_left {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp LEFT>;
        };
        combo_right {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp RIGHT>;
        };
        combo_home {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp HOME>;
        };
        combo_end {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp END>;
        };
        combo_pgup {
            timeout-ms = <50>;
            key-positions = <9 10>;
            bindings = <&kp PGUP>;
        };
        combo_pgdn {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp PGDN>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  | DEL | BKSP |
// | ESC  |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  '   |
// | ALT  |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | ENT  |
//                    | GUI | CTL | SPC |   | SHF | LAY1 | LAY2|
                        bindings = <
   &kp TAB   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L &kp U     &kp Y   &kp DEL  &kp BSPC
   &kp ESC   &kp A &kp R &kp S &kp T &kp G   &kp M &kp N &kp E     &kp I   &kp O    &kp SQT
   &kp LALT  &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H &kp COMMA &kp DOT &kp FSLH &kp RET
              &kp LGUI &kp LCTRL &kp SPACE   &kp LSHFT &mo SYMBOL &mo NAVI
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// |   `  |  @  |  !  |  {  |  =  |  }  |                     |  +  |  7  |  8  |  9  |     |      |
// |   ~  |  #  |  %  |  (  |  -  |  )  |                     |  *  |  4  |  5  |  6  |  0  |  :   |
// |      |  &  | '|' |  [  |  _  |  ]  |                     |  \  |  1  |  2  |  3  |  $  |  ;   |
//                    |  ^  |     |     |                     |     |     |     |
                        bindings = <
   &kp GRAVE &kp AT    &kp EXCL  &kp LBRC &kp EQUAL &kp RBRC    &kp PLUS  &kp N7 &kp N8 &kp N9 &trans   &trans 
   &kp TILDE &kp HASH  &kp PRCNT &kp LPAR &kp MINUS &kp RPAR    &kp ASTRK &kp N4 &kp N5 &kp N6 &kp N0   &kp COLON
   &trans    &kp AMPS  &kp PIPE  &kp LBKT &kp UNDER &kp RBKT    &kp BSLH  &kp N1 &kp N2 &kp N3 &kp DLLR &kp SEMI
                    &kp CARET    &trans   &trans          &trans    &trans    &trans
                        >;
                };

                navi_layer {
// -------------------------------------------------------------------------
// |     |ENT | PGDN| UP  | PGUP|  =   |                  | PSCRN|  PGDN |  UP  | PGUP  |      |       |
// |     |HOME| LEFT| DOWN|RIGHT| END  |                  | HOME |  LEFT | DOWN | RIGHT |  END |C+BKSP |
// |     | 1  |  2  | 3   |  4  |  5   |                  | 6    |  7    |   8  |   9   |   0  |       |
//                   |     |     |     |                      |     |     |     |
                        bindings = <
   &trans    &kp RET  &kp PGDN &kp UP   &kp PGUP  &kp EQUAL      &kp PSCRN  &kp PGDN &kp UP   &kp PGUP  &trans   &trans
   &trans    &kp HOME &kp LEFT &kp DOWN &kp RIGHT &kp END        &kp HOME   &kp LEFT &kp DOWN &kp RIGHT &kp END  &kp LC(BSPC)
   &trans    &kp N1   &kp N2   &kp N3   &kp N4    &kp N5         &kp N6     &kp N7   &kp N8   &kp N9    &kp N0   &trans
                          &trans    &trans   &trans          &trans    &trans    &trans
                        >;
                };

                config_layer {
// -------------------------------------------------------------------------
// | PSCRN | F1 | F2  | F3  | F4  | BTCLR|                  | BTCAL|  HOME |  UP  |  END  |VOL+  |SLEEP  |
// |       | F5 | F6  | F7  | F8  | BT0  |                  | BT1  |  LEFT | DOWN | RIGHT |VOL-  | OFF   |
// |       | F9 | F10 | F11 | F12 | BTX0 |                  | BTX1 |  PGUP | END  | PGDN  |MUTE  | PLAY  |
//                   |     |     |     |                      |     |     |     |
                        bindings = <
   &kp PSCRN &kp F1 &kp F2  &kp F3  &kp F4  &bt BT_CLR     &bt BT_CLR_ALL &kp HOME    &kp UP    &kp END    &kp C_VOL_UP  &win_sleep
   &trans    &kp F5 &kp F6  &kp F7  &kp F8  &bt BT_SEL 0   &bt BT_SEL 1   &kp LEFT    &kp DOWN  &kp RIGHT  &kp C_VOL_DN  &soft_off
   &trans    &kp F9 &kp F10 &kp F11 &kp F12 &bt BT_DISC 0  &bt BT_DISC 1  &kp PGUP    &kp END   &kp PGDN   &kp C_MUTE    &kp C_PP
                          &trans    &trans   &trans          &trans    &trans    &trans
                        >;
                };
        };
};
